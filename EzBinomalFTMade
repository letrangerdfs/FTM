from math import comb
import matplotlib.pyplot as plt

def binomial_pmf(k, n, p):
    return comb(n, k) * p**k * (1-p)**(n-k)

def probability_to_odds(p):
    if p == 1:
        return -float("inf")
    elif p == 0:
        return float("inf")
    elif p > 0.5:
        return round(-100 * p / (1 - p))
    else:
        return round(100 * (1 - p) / p)

def plot_probabilities(probs, n):
    fig, ax = plt.subplots()
    ax.bar(range(n+1), probs)
    ax.set_xlabel("Number of free throws made")
    ax.set_ylabel("Probability (%)")
    ax.set_title(f"Probabilities for {n} free throw attempts")
    plt.show()

n = int(input("Enter the number of free throw attempts: "))
p = float(input("Enter the probability of making a free throw (as a decimal): "))

probs = [sum(binomial_pmf(i, n, p) for i in range(k, n+1)) * 100 for k in range(n+1)]

for k, prob in enumerate(probs):
    odds = probability_to_odds(prob/100)
    print(f"The probability of making at least {k} free throws out of {n} attempts is {prob:.2f}% with odds of {odds}")

plot_probabilities(probs, n)
